{"version":3,"sources":["components/GoodsList/GoodsList.tsx","components/LoadingError/LoadingError.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","className","name","id","LoadingError","getAll","fetch","then","response","json","get5First","a","allGoods","sort","b","localeCompare","slice","getRedGoods","filter","App","state","isLoading","hasLoadingError","loadData","getData","setState","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oRAMaA,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEEC,MAAO,CAAEC,MAAOF,EAAKE,OACrBC,UAAU,wBAHZ,SAKGH,EAAKI,MAJDJ,EAAKK,UCTPC,EAAwB,WACnC,OACE,mECDG,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACAN,IADA,cACjBO,EADiB,yBAGhBA,EAASC,MAAK,SAACF,EAAGG,GAAJ,OAAUH,EAAET,KAAKa,cAAcD,EAAEZ,SAAOc,MAAM,EAAG,IAH/C,2CAAH,qDAMTC,EAAW,uCAAG,4BAAAN,EAAA,sEACFN,IADE,cACnBO,EADmB,yBAGlBA,EAASM,QAAO,SAAApB,GAAI,MAAmB,QAAfA,EAAKE,UAHX,2CAAH,qDCFlBmB,E,4MACJC,MAAQ,CACNxB,MAAO,GACPyB,WAAW,EACXC,iBAAiB,G,EAGnBC,S,uCAAW,WAAOC,GAAP,eAAAb,EAAA,6DACT,EAAKc,SAAS,CACZJ,WAAW,IAFJ,kBAMaG,IANb,OAMD5B,EANC,OAQP,EAAK6B,SAAS,CACZ7B,UATK,gDAYP,EAAK6B,SAAS,CACZH,iBAAiB,IAbZ,yBAgBP,EAAKG,SAAS,CACZJ,WAAW,IAjBN,4E,kGAsBX,WAAU,IAAD,OACP,EAA8CK,KAAKN,MAA3CxB,EAAR,EAAQA,MAAO0B,EAAf,EAAeA,gBAAiBD,EAAhC,EAAgCA,UAEhC,OACE,mCACE,sBAAKpB,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,mBACA,sBAAKA,UAAU,UAAf,UACE,wBACE0B,KAAK,SACL1B,UAAU,sCACV2B,QAAS,kBAAM,EAAKL,SAASlB,IAH/B,iBAOA,wBACEsB,KAAK,SACL1B,UAAU,uCACV2B,QAAS,kBAAM,EAAKL,SAASb,IAH/B,eAOA,wBACEiB,KAAK,SACL1B,UAAU,sCACV2B,QAAS,kBAAM,EAAKL,SAASN,IAH/B,oBAQF,gCACGK,GAAmB,cAAC,EAAD,KAClBA,IAAoBD,EAClB,qBAAKpB,UAAU,oBAAf,wBACA,qBAAKA,UAAU,kBAAf,SAAiC,cAAC,EAAD,CAAWL,MAAOA,mB,GA/DjDiC,IAAMC,WAuETX,IChFfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e9a9d540.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList:React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          style={{ color: good.color }}\n          className=\"goodsList__list--link\"\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\nexport const LoadingError:React.FC = () => {\n  return (\n    <div>\n      Sorry, a loading error occured!\n    </div>\n  );\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = async () => {\n  const allGoods = await getAll();\n\n  return allGoods.sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const allGoods = await getAll();\n\n  return allGoods.filter(good => good.color === 'red');\n};\n","import React from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { LoadingError } from './components/LoadingError/LoadingError';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\ntype State = {\n  goods: Good[],\n  isLoading: boolean,\n  hasLoadingError: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [],\n    isLoading: false,\n    hasLoadingError: false,\n  };\n\n  loadData = async (getData: () => Promise<Good[]>) => {\n    this.setState({\n      isLoading: true,\n    });\n\n    try {\n      const goods = await getData();\n\n      this.setState({\n        goods,\n      });\n    } catch {\n      this.setState({\n        hasLoadingError: true,\n      });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n\n  render() {\n    const { goods, hasLoadingError, isLoading } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1 className=\"title\">Goods</h1>\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className=\"buttons__btn buttons__btn--allGoods\"\n              onClick={() => this.loadData(getAll)}\n            >\n              All\n            </button>\n            <button\n              type=\"button\"\n              className=\"buttons__btn buttons__btn--fiveGoods\"\n              onClick={() => this.loadData(get5First)}\n            >\n              5\n            </button>\n            <button\n              type=\"button\"\n              className=\"buttons__btn buttons__btn--redGoods\"\n              onClick={() => this.loadData(getRedGoods)}\n            >\n              red\n            </button>\n          </div>\n          <div>\n            {hasLoadingError && <LoadingError /> }\n            {!hasLoadingError && (isLoading\n              ? <div className=\"goodsList__loader\">Loading...</div>\n              : <div className=\"goodsList__list\"><GoodsList goods={goods} /></div>)}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}